name: Test

on:
  push:
  pull_request:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Prepare pip cache dir
        run: mkdir -p ~/.cache/pip

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Run pre-commit hooks
        run: |
          pip install pre-commit black isort flake8 djlint
          pre-commit install
          pre-commit run --all-files


  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_db
          MYSQL_USER: django
          MYSQL_PASSWORD: django_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -prootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Prepare pip cache dir
        run: mkdir -p ~/.cache/pip

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Configure MySQL and run tests
        env:
          DATABASE_URL: mysql://root:rootpassword@127.0.0.1:3306/test_db
          DJANGO_DB_ENGINE: django.db.backends.mysql
          DJANGO_DB_NAME: test_db
          DJANGO_DB_USER: root
          DJANGO_DB_PASSWORD: rootpassword
          DJANGO_DB_HOST: 127.0.0.1
          DJANGO_DB_PORT: 3306
          DJANGO_SETTINGS_MODULE: web.settings
        run: |
          cp .env.sample .env
          sed -i 's|DATABASE_URL=.*|DATABASE_URL=${DATABASE_URL}|g' .env

          sudo apt-get update
          sudo apt-get install -y default-libmysqlclient-dev

          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install mysqlclient

          mysql -h127.0.0.1 -P3306 -uroot -prootpassword -e "SET GLOBAL sql_mode='NO_ENGINE_SUBSTITUTION';"

          python manage.py test

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare pip cache dir
        run: mkdir -p ~/.cache/pip

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
